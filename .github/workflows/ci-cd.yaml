name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint-test-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      # Step 4: Run linting
      - name: Run flake8
        run: |
          echo "Running Linting..."
          flake8 src tests --max-line-length=120

      # Step 5: Run tests
      - name: Run tests with pytest
        run: |
          if [ -d "tests" ]; then
            pytest --maxfail=3 --disable-warnings -q
          else
            echo "No tests directory found. Skipping tests."
            exit 0
          fi
          

      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 7: Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/housing-app:latest

  deploy:
    needs: lint-test-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to local/EC2
        run: |
          echo "Deploying..."
          # For local run
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/housing-app:latest
          docker run -d -p 8000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/housing-app:latest

          #For EC2 deployment
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_HOST }} \
          "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/housing-app:latest && docker run -d -p 8000:8000 ${{ secrets.DOCKERHUB_USERNAME }}/housing-app:latest"